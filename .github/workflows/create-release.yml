name: Create Release with Zipped Branch Assets and Date

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
    - name: Set up environment variables
      run: |
        echo "CURRENT_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
        echo "RELEASE_TITLE=$(date +'%Y.%m.%d') 词库更新" >> $GITHUB_ENV

    - name: Checkout main branch
      uses: actions/checkout@v4

    - name: Zip main branch files excluding .git and .github
      run: zip -r xmjd6.zip . -x "*.git*" -x "*.github*"

    - name: Zip main branch pure files
      run: |
        mkdir -p Rime/
        rsync -avm --exclude='.git*' --exclude='*.github*' --exclude='squirrel*' --exclude='weasel*' --exclude='hamster*' --exclude='xmjd6.zip' . Rime/
        ls -al Rime/
        pwd

    - name: Get latest release tag
      id: get_tag
      uses: actions/github-script@v7
      with:
        script: |
          const response = await github.rest.repos.getLatestRelease({
            owner: 'amorphobia',
            repo: 'rabbit',
          });
          const tagName = response.data.tag_name;
          console.log(`Latest release tag is ${tagName}`);
          return tagName;

    - name: Fetch tags and generate changelog from last release
      id: changelog
      uses: actions/github-script@v7
      with:
        script: |
          const lastRelease = await github.rest.repos.getLatestRelease({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          const compare = await github.rest.repos.compareCommits({
            owner: context.repo.owner,
            repo: context.repo.repo,
            base: lastRelease.data.tag_name,
            head: 'main'
          });
          let changelog = '## Changelog\n\n';  # Change: Ensure no extraneous quotes around changelog content
          compare.data.commits.forEach(commit => {
            const message = commit.commit.message.split('\n').join(' ');  # Prevent markdown errors due to commit message newlines
            changelog += `- \`${commit.sha.substring(0, 7)}\` ${message}\n`;
          });
          return changelog;  # This output is used directly, make sure it's correctly formatted

    - name: Create Release
      id: create_release
      uses: shogo82148/actions-create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.CURRENT_DATE }}
        release_name: ${{ env.RELEASE_TITLE }}
        body: |  # Change: Using pipe to correctly handle multi-line strings from outputs
          ${{ steps.changelog.outputs.result }}
          ## Release Notes
          - [如何使用](https://github.com/hugh7007/xmjd6-rere#%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8)
        draft: false
        prerelease: false

    - name: Upload Rabbit-xmjd6.zip to Release
      uses: shogo82148/actions-upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Rabbit-xmjd6.zip
        asset_name: Rabbit-xmjd6.zip
        asset_content_type: application/zip

    - name: Upload xmjd6.zip to Release
      uses: shogo82148/actions-upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./xmjd6.zip
        asset_name: xmjd6.zip
        asset_content_type: application/zip
