name: Create Release with Zipped Branch Assets and Date

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
    - name: Set up environment variables
      run: |
        echo "CURRENT_DATE=$(date +'%Y%m%d')" >> $GITHUB_ENV
        echo "RELEASE_TITLE=$(date +'%Y.%m.%d') 词库更新" >> $GITHUB_ENV

    - name: Checkout main branch
      uses: actions/checkout@v4
      with:
        ref: 'main'

    - name: Zip main branch files excluding .git and .github
      run: zip -r xmjd6.zip . -x "*.git*" -x "*.github*"
    
    - name: Zip main branch pure files
      run:  | 
        mkdir -p Rime
        rsync -avm --exclude='.git*' --exclude='*.github*' --exclude='squirrel*' --exclude='weasel*' --exclude='hamster*' ./Rime/

    - name: Get latest pre-release tag
      id: get_pre_release_tag
      uses: actions/github-script@v5
      with:
        script: |
          const repo = {
            owner: 'username',
            repo: 'repository',
          };
          // 获取所有releases，包括pre-releases
          const response = await github.rest.repos.listReleases(repo);
          // 过滤出pre-releases
          const preReleases = response.data.filter(release => release.prerelease);
          // 获取最新的pre-release
          const latestPreRelease = preReleases[0];
          if (!latestPreRelease) {
            console.log('No pre-release found.');
            return '';
          }
          console.log(`Latest pre-release tag is ${latestPreRelease.tag_name}`);
          return latestPreRelease.tag_name;

    - name: Set the pre-release tag as environment variable
      run: echo "PRE_RELEASE_TAG=${{ steps.get_pre_release_tag.outputs.result }}" >> $GITHUB_ENV

    - name: Download the pre-release asset
      if: env.PRE_RELEASE_TAG != ''
      run: |
        curl -L -o rabbit-${{ env.PRE_RELEASE_TAG }}-x64.zip https://github.com/username/repository/releases/download/${{ env.PRE_RELEASE_TAG }}/rabbit-${{ env.PRE_RELEASE_TAG }}-x64.zip

      
    - name: Unzip Rabbit
      run: |
        mkdir -p rabbit-x64
        unzip rabbit-${{ env.PRE_RELEASE_TAG }}-x64.zip -d rabbit-x64
        
    - name: Merge Rime into Rabbit
      run: |
        cp -r Rime/* rabbit-x64/
        zip -r rabbit-xmjd6.zip rabbit-x64/
        
    - name: Create Release
      id: create_release
      uses: shogo82148/actions-create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.CURRENT_DATE }}
        release_name: ${{ env.RELEASE_TITLE }}
        body: |
          ## Release Notes
          - xmjd6: 适合新版本librime(>=1.9.0)的客户端使用。
        draft: false
        prerelease: false

    - name: Upload xmjd6.zip to Release
      uses: shogo82148/actions-upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./xmjd6.zip
        asset_name: xmjd6.zip
        asset_content_type: application/zip
        
    - name: Upload Rabbit-xmjd6.zip to Release
      uses: shogo82148/actions-upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./rabbit-xmjd6.zip
        asset_name: Rabbit-xmjd6.zip
        asset_content_type: application/zip
